events {
    worker_connections 1024;
}

http {
    log_format custom_log '[$time_local] $remote_addr "$request" $status '
                         '"$http_user_agent" $request_time $upstream_response_time '
                         '"$upstream_addr" $upstream_status '
                         '"$http_x_app_pool" "$http_x_release_id"';

    access_log /var/log/nginx/access.log custom_log;
    error_log /var/log/nginx/error.log;

    upstream blue_pool {
        server app-blue:8080;
    }

    upstream green_pool {
        server app-green:8080;
    }

    map $http_x_app_pool $active_pool {
        default "${ACTIVE_POOL}_pool";
        "blue" "blue_pool";
        "green" "green_pool";
    }

    server {
        listen 80;

        location / {
            proxy_pass http://$active_pool;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            
            # Capture upstream details
            proxy_intercept_errors on;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
